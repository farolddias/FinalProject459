#define  _POSIX_C_SOURCE 200809L
#define  _GNU_SOURCE
#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

//reading input files
int main(int argc, char* argv[])
{
    //Reading mesh input file
    char *tri = argv[1];
    FILE *fptr = fopen(tri, "r");
    int firstNum;

    if (fptr == NULL){
        printf("No file");
        exit(1);
    }

    if(fptr!=NULL){
        fscanf(fptr, "%d", &firstNum);  //1st line - number of triangles
    }
    //printf("Number of triangles: %d\n", firstNum);

    double *triangle = (double*) malloc(firstNum * 9 * sizeof(double)); //creating array with size N

    char *line = NULL;  //string_which_stores_line
    size_t read = 0;    //variable_that_stores_max_size_of_line

    int i=0;
    int x = 0;
    while ((read = getline(&line, &read, fptr)) != -1) {
        x++;
        if(x>=2){
        //printf("%s\n", line);
            char* token = strtok(line, ",");
            while (token != NULL) {
                char* end;
                double d1 = strtod(token, &end);
                triangle[i] = d1;
                printf("%f\n", triangle[i]);
                token = strtok(NULL, ",");
            }
        }
    } 

    char *sph = argv[2];
    FILE *fptr2 = fopen(sph, "r");
    double *sphere;

    if (fptr2 == NULL){
        printf("No file");
        exit(1);
    }

    char *line_sph = NULL;  //string_which_stores_line
    size_t read_sph = 0;    //variable_that_stores_max_size_of_line
    int c=0;
    int sph_num=0;
    int j=0;

    while ((read_sph = getline(&line_sph, &read_sph, fptr2))!= -1) {
        c++;
        if (c == 3){
            sph_num = atoi(line_sph);
            //printf("Number of spheres: %d\n", sph_num);
        }

        sphere = (double*) malloc(sph_num * 3 * sizeof(double)); //creating array with size 

        if(c >= 4){
            char* token_s = strtok(line_sph, ",");
            while (token_s != NULL) {
                char* end;
                double d2 = strtod(token_s, &end);
                sphere[j] = d2;
                printf("%f\n", sphere[j]);
                token_s = strtok(NULL, ",");
            }
        }
    free(sphere);
    }
 
    FILE *fp;
    char fname[1000];

    /* open for writing */
    fp = fopen("collision_detection.txt", "w");

    if (fp == NULL)
    {
        printf("File does not exist.\n");
        return;
    }
    
    fprintf(fp, "s,t");


    
    
    fclose(fp);
    free(triangle);    
    return 0;
}
